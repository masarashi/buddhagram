<div class="container">
  <div id="map"></div>

  <p class="text-center mt-5 mb-5">ご利用者様の現在位置から200km以内のスポットを表示しています。</p>

  <div class="row mt-5">
    <%= render partial: "search/spot", collection: @locations %>
  </div>
</div>

<!-- GoogleMap -->
<script>
  let map
  let marker = [];
  let infoWindow = [];
  let markerData = gon.locations;

  function initMap(){
    // 現在地を取得
    navigator.geolocation.getCurrentPosition(function (position) {

      LatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

      // 取得した現在地を中心に表示
      map = new google.maps.Map(document.getElementById('map'), {
        center: LatLng,
        zoom: 7
      });

      // 現在地のマーカー
      // marker = new google.maps.Marker({
      //   position: LatLng,
      //   map: map
      // });

      // 周辺スポットの表示
      for (var i = 0; i < markerData.length; i++) {
        let id = markerData[i]['id']

        // 各地点の緯度経度を算出
        markerLatLng = new google.maps.LatLng({
          lat: markerData[i]['latitude'],
          lng: markerData[i]['longitude']
        });

        // 各地点のマーカーを作成
        marker[i] = new google.maps.Marker({
          position: markerLatLng,
          map: map
        });

        // 各地点の吹き出しを作成
        infoWindow[i] = new google.maps.InfoWindow({
          // 吹き出しの中身, 引数で各属性の配列と配列番号を渡す
          content: `<a href='/spots/${ id }' data-turbolinks='false'>${ markerData[i]['name'] }</a>`
          // content: `${ markerData[i]['name'] }`
        });

        // マーカーにクリックイベントを追加
        markerEvent(i);
      }
    });
  }

  // マーカーをクリックしたら吹き出しを表示
  function markerEvent(i) {
    marker[i].addListener('click', function () {
      infoWindow[i].open(map, marker[i]);
    });
  }

  // 現在地取得処理
  function getPosition() {
    // 現在地を取得
    navigator.geolocation.getCurrentPosition(
      // 取得成功した場合
      function(position) {
        window.location.href = "/spots/search_location?latitude="+position.coords.latitude+"&longitude="+position.coords.longitude
       },
      // 取得失敗した場合
      function(error) {
        switch(error.code) {
          case 1: //PERMISSION_DENIED
            alert("位置情報の利用が許可されていません");
            break;
          case 2: //POSITION_UNAVAILABLE
            alert("現在位置が取得できませんでした");
            break;
          case 3: //TIMEOUT
            alert("タイムアウトになりました");
            break;
          default:
            alert("その他のエラー(エラーコード:"+error.code+")");
            break;
        }
      }
    );
  }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= Rails.application.credentials.gmap[:api_key] %>&callback=initMap" async defer></script>
